kind: pipeline
type: docker
name: Docker Build

trigger:
  event:
  - cron
  cron:
  - monthly

volumes:
- name: docker_sock
  host:
    path: /var/run/docker.sock

steps:
- name: Build and push release
  image: fuzzymistborn/docker-alpine-skopeo:latest
  environment:
    DOCKERHUB_PASS:
      from_secret: dockerhub_pw
    GHCR_PASS:
      from_secret: ghcr_pw
    PYTHON_VER: 3.8
  volumes:
    - name: docker_sock
      path: /var/run/docker.sock
  commands:
    - docker login docker.io -u fuzzymistborn -p $DOCKERHUB_PASS
    - docker login ghcr.io -u fuzzymistborn -p $GHCR_PASS
    - docker build -t fuzzymistborn/docker-linting:latest -t fuzzymistborn/docker-linting:$PYTHON_VER -t ghcr.io/fuzzymistborn/docker-linting:latest -t ghcr.io/fuzzymistborn/docker-linting:$PYTHON_VER .
    - docker push --all-tags fuzzymistborn/docker-linting
    - docker push --all-tags ghcr.io/fuzzymistborn/docker-linting

- name: Send TG Notification
  image: appleboy/drone-telegram
  settings:
    token:
      from_secret: tg_token
    to:
      from_secret: tg_id
    format: markdown
    message: "{{#success build.status}}‚úÖ  Build for `{{repo.name}}` was *successful*!{{else}}‚ùå  Build for `{{repo.name}}` has *FAILED*!{{/success}} \nüåê  [Output]({{build.link}})\nüìù  Commit: {{ commit.message }}"
  when:
    status: [ success, failure ]
